steps:

- id: go-build
  name: 'golang:1.13'
  entrypoint: 'bash'
  args:
  - '-c'
  - >-
    mkdir dist;
    env GOOS=linux GOARCH=amd64 go build -o dist/report cmd/report/report.go;
    env GOOS=windows GOARCH=amd64 go build -o dist/report.exe cmd/report/report.go;

# Create a github release and upload the artifacts with a go tool
- id: release
  name: 'gcr.io/cloud-builders/curl'
  secretEnv: ['GITHUB_TOKEN']
  entrypoint: 'bash'
  args:
  - '-c'
  - >-
    if [ "$TAG_NAME" ] ; then
      curl -sf -o ghr_v0.12.1_linux_amd64.tar.gz -L https://github.com/tcnksm/ghr/releases/download/v0.12.1/ghr_v0.12.1_linux_amd64.tar.gz;
      echo -n "471c2eb1aee20dedffd00254f6c445abb5eb7d479bcae32c4210fdcf036b2dce  ghr_v0.12.1_linux_amd64.tar.gz" | sha256sum -c - && tar xzf ghr_v0.12.1_linux_amd64.tar.gz;
      ghr_*/ghr -t $$GITHUB_TOKEN -u e-conomic -r gcr-smi $TAG_NAME dist;
    fi
  waitFor:
  - 'go-build'

secrets:
- kmsKeyName: projects/dev-vml-cm/locations/global/keyRings/builder/cryptoKeys/github-key
  secretEnv:
    GITHUB_TOKEN: "CiQAQuFuh71FPXyP0s94Cp8qVWDI5zJDBc4MGgk/l7nb8boknGUSUQCXOpI04/pDwOSNW3ImqzP+RW0wkXyexAn6dYhvyMOO3tw/oQUhW72HCLhnEfM4m3AmKQ8z5WCoQ99X7s1VH5Ko31oLYQ44BS7JHp69HYkCVQ=="
